name: Build and Publish Docker Image

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Set up GraalVM
      uses: DeLaGuardo/setup-graalvm@3
      with:
        graalvm-version: '20.0.0.java11'
        
    - name: Install native-image
      run: gu install native-image

    - uses: actions/cache@master
      #Using master because of the multi-paths feature (reportedly only available on master at the moment)
      with:
        path: |
          ~/.gradle/wrapper
          ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build --stacktrace

  docker:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
    needs: build

    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1

    steps:

      - uses: actions/checkout@v2

      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@3
        with:
          graalvm-version: '20.0.0.java11'
        
      - name: Install native-image
        run: gu install native-image

      - uses: actions/cache@master
        #Using master because of the multi-paths feature (reportedly only available on master at the moment)
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
            application/build/jib-cache
          key: ${{ runner.os }}-jib-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Retrieve branch or tag name
        id: refvar
        run: echo "::set-output name=gitRefName::${GITHUB_REF#refs/*/}"

      - name: Push Docker image (tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew build -x test -Dquarkus.package.type=native -Dquarkus.native.container-build=true -Dquarkus.native.enable-http-url-handler=true -Dquarkus.native.enable-https-url-handler=true -Dquarkus.native.enable-all-security-services=true -Dquarkus.container-image.push=true -Dquarkus.container-image.group=rm3l -Dquarkus.container-image.name=mac-oui -Dquarkus.container-image.tag=${{ steps.refvar.outputs.gitRefName }} -Dquarkus.container-image.registry=registry.hub.docker.com -Dquarkus.container-image.username="${{ secrets.DOCKER_HUB_USERNAME }}" -Dquarkus.container-image.password="${{ secrets.DOCKER_HUB_PASSWORD }}"

      - name: Push latest Docker image (master)
        if: github.ref == 'refs/heads/master'
        run: ./gradlew build -x test -Dquarkus.package.type=native -Dquarkus.native.container-build=true -Dquarkus.native.enable-http-url-handler=true -Dquarkus.native.enable-https-url-handler=true -Dquarkus.native.enable-all-security-services=true -Dquarkus.container-image.push=true -Dquarkus.container-image.group=rm3l -Dquarkus.container-image.name=mac-oui -Dquarkus.container-image.tag=latest -Dquarkus.container-image.registry=registry.hub.docker.com -Dquarkus.container-image.username="${{ secrets.DOCKER_HUB_USERNAME }}" -Dquarkus.container-image.password="${{ secrets.DOCKER_HUB_PASSWORD }}"
