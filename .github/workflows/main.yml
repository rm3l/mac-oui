#The MIT License (MIT)
#
#Copyright (c) 2020 Armel Soro
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

name: Build and Publish Docker Image

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build-test-and-push:

    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1

    steps:

    - uses: actions/checkout@v3

    - name: Retrieve branch or tag name
      id: refvar
      run: echo "::set-output name=gitRefName::${GITHUB_REF#refs/*/}"

    - name: Set up GraalVM
      uses: DeLaGuardo/setup-graalvm@5.0
      with:
        graalvm: 22.0.0.2
        # optional, available: java8 and java11, defaults to java8
        java: java11
        # optional, available: amd64 and aarch64, defaults to amd64
        arch: amd64

    - name: Install native-image
      run: gu install native-image

    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Run tests
      run: ./gradlew test

    - name: Build both native and Docker images
      run: |
        ./gradlew build -x test \
          -Dquarkus.package.type=native \
          -Dquarkus.native.container-build=false \
          -Dquarkus.native.enable-http-url-handler=true \
          -Dquarkus.native.enable-https-url-handler=true \
          -Dquarkus.native.enable-all-security-services=true \
          -Dquarkus.container-image.build=true \
          -Dquarkus.container-image.group=rm3l \
          -Dquarkus.container-image.name=mac-oui \
          -Dquarkus.container-image.tag=latest

#     - name: Github Container Registry - Tag Docker image (latest)
#       if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
#       run: docker image tag rm3l/mac-oui:latest ghcr.io/rm3l/mac-oui:latest

    - name: Docker Hub - Tag Docker image (tag)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: docker image tag rm3l/mac-oui:latest rm3l/mac-oui:${{ steps.refvar.outputs.gitRefName }}

#     - name: Github Container Registry - Tag Docker image (tag)
#       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#       run: docker image tag rm3l/mac-oui:latest ghcr.io/rm3l/mac-oui:${{ steps.refvar.outputs.gitRefName }}

    - name: Login to Docker Hub
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Docker Hub - Push Docker image (tag)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: docker image push rm3l/mac-oui:${{ steps.refvar.outputs.gitRefName }}

    - name: Docker Hub - Push Docker image (latest)
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
      run: docker image push rm3l/mac-oui:latest

#     - name: Login to Github Container Registry
#       if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
#       uses: docker/login-action@v2
#       with:
#         registry: ghcr.io
#         username: ${{ github.repository_owner }}
#         password: ${{ secrets.GH_PACKAGES_TOKEN }}

#     - name: Github Container Registry - Push Docker image (tag)
#       if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
#       run: docker image push ghcr.io/rm3l/mac-oui:${{ steps.refvar.outputs.gitRefName }}

#     - name: Github Container Registry - Push Docker image (latest)
#       if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
#       run: docker image push ghcr.io/rm3l/mac-oui:latest
