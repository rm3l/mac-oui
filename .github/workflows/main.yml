#The MIT License (MIT)
#
#Copyright (c) 2020 Armel Soro
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

name: Build and Publish Docker Image

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Set up GraalVM
      uses: DeLaGuardo/setup-graalvm@latest
      with:
        graalvm-version: '20.1.0.java11'
        
    - name: Install native-image
      run: gu install native-image

    - uses: actions/cache@master
      #Using master because of the multi-paths feature (reportedly only available on master at the moment)
      with:
        path: |
          ~/.gradle/wrapper
          ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build --stacktrace

  docker:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
    needs: build

    runs-on: ubuntu-latest

    env:
      DOCKER_BUILDKIT: 1

    steps:

      - uses: actions/checkout@v2

      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@latest
        with:
          graalvm-version: '20.1.0.java11'
        
      - name: Install native-image
        run: gu install native-image

      - uses: actions/cache@master
        #Using master because of the multi-paths feature (reportedly only available on master at the moment)
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
            application/build/jib-cache
          key: ${{ runner.os }}-jib-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Retrieve branch or tag name
        id: refvar
        run: echo "::set-output name=gitRefName::${GITHUB_REF#refs/*/}"

      - name: Push Docker image (tag) to Docker Hub
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew build -x test -Dquarkus.package.type=native -Dquarkus.native.container-build=false -Dquarkus.native.enable-http-url-handler=true -Dquarkus.native.enable-https-url-handler=true -Dquarkus.native.enable-all-security-services=true -Dquarkus.container-image.push=true -Dquarkus.container-image.group=rm3l -Dquarkus.container-image.name=mac-oui -Dquarkus.container-image.tag=${{ steps.refvar.outputs.gitRefName }} -Dquarkus.container-image.registry=registry.hub.docker.com -Dquarkus.container-image.username="${{ secrets.DOCKER_HUB_USERNAME }}" -Dquarkus.container-image.password="${{ secrets.DOCKER_HUB_PASSWORD }}"

      - name: Push latest Docker image (master) to Docker Hub
        if: github.ref == 'refs/heads/master'
        run: ./gradlew build -x test -Dquarkus.package.type=native -Dquarkus.native.container-build=false -Dquarkus.native.enable-http-url-handler=true -Dquarkus.native.enable-https-url-handler=true -Dquarkus.native.enable-all-security-services=true -Dquarkus.container-image.push=true -Dquarkus.container-image.group=rm3l -Dquarkus.container-image.name=mac-oui -Dquarkus.container-image.tag=latest -Dquarkus.container-image.registry=registry.hub.docker.com -Dquarkus.container-image.username="${{ secrets.DOCKER_HUB_USERNAME }}" -Dquarkus.container-image.password="${{ secrets.DOCKER_HUB_PASSWORD }}"

      - name: Push Docker image (tag) to GitHub Packages
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew build -x test -Dquarkus.package.type=native -Dquarkus.native.container-build=false -Dquarkus.native.enable-http-url-handler=true -Dquarkus.native.enable-https-url-handler=true -Dquarkus.native.enable-all-security-services=true -Dquarkus.container-image.push=true -Dquarkus.container-image.group=rm3l/rm3l -Dquarkus.container-image.name=mac-oui -Dquarkus.container-image.tag=${{ steps.refvar.outputs.gitRefName }} -Dquarkus.container-image.registry=docker.pkg.github.com -Dquarkus.container-image.username="rm3l" -Dquarkus.container-image.password="${{ secrets.GH_PACKAGES_TOKEN }}"

      - name: Push latest Docker image (master) to GitHub Packages
        if: github.ref == 'refs/heads/master'
        run: ./gradlew build -x test -Dquarkus.package.type=native -Dquarkus.native.container-build=false -Dquarkus.native.enable-http-url-handler=true -Dquarkus.native.enable-https-url-handler=true -Dquarkus.native.enable-all-security-services=true -Dquarkus.container-image.push=true -Dquarkus.container-image.group=rm3l/rm3l -Dquarkus.container-image.name=mac-oui -Dquarkus.container-image.tag=latest -Dquarkus.container-image.registry=docker.pkg.github.com -Dquarkus.container-image.username="rm3l" -Dquarkus.container-image.password="${{ secrets.GH_PACKAGES_TOKEN }}"
